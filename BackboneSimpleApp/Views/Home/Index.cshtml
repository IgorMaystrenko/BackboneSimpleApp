<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <style>
        #contact-list input.edit, #contact-list .save, #contact-list .cancel-save {
            display: none; /* Hides input box*/
        }

        #contact-list .editing label, #contact-list .editing .edit-button {
            display: none; /* Hides label text when .editing*/
        }

        #contact-list .editing input.edit, #contact-list .editing .save, #contact-list .editing .cancel-save {
            display: inline; /* Shows input text box when .editing*/
        }
    </style>
</head>
<body>
<div id="app">
    <div id="contact-list">
    </div>

    <div id="add-contact-container">
        <h1>Add new contact</h1>
        <input type="text" id="new-contact-name"/>
        <input type="text" id="new-contact-phone" />
        <input type="button" id="add-new-contact" value="Add new contact"/>
    </div>
</div>

    <script src="~/Scripts/json2.js"></script>
    <script src="~/Scripts/jquery-1.7.1.js"></script>
    <script src="~/Scripts/underscore.js"></script>
    <script src="~/Scripts/backbone.js"></script>
<script type="text/javascript">

    $(function() {

        var Contact = Backbone.Model.extend({
            defaults: {
                id: -1,
                name: "",
                phone: ""
            },
            urlRoot: '../api/contacts'
        });

        var ContactList = Backbone.Collection.extend({
            model: Contact,
            url: '../api/contacts'
        });

        var contactList = new ContactList();

        var ContactItemView = Backbone.View.extend({
            template: _.template($('#item-template').html()),
            urlRoot: '../api/contacts',
            initialize: function () {
                this.nameInput = this.$el.find('.edit-name');
                this.phoneInput = this.$el.find('.edit-phone');
                this.model.on('change', this.render, this);
                this.model.on('destroy', this.remove, this);
            },
            events: {
                'click .edit-button': 'edit',
                'click .destroy': 'destroy',
                'click .save' : 'save',
                'click .cancel-save' : 'cancel'
            },
            render: function() {
                this.$el.html(this.template(this.model.toJSON()));
                return this;
            },
            destroy: function() {
                this.model.destroy();
            },
            edit: function() {
                this.$el.addClass('editing');
            },
            save: function () {
                var newName = this.$el.find('.edit-name').val().trim();
                var newPhone = this.$el.find('.edit-phone').val().trim();
                if (newName && newPhone) {
                    this.model.save({ 'name': newName, 'phone': newPhone });
                }

                this.$el.removeClass('editing');
            },
            cancel: function() {
                this.$el.removeClass('editing');
            }
        });

        var AppView = Backbone.View.extend({
            el: '#app',
            initialize: function () {
                $('#add-new-contact').click(function() {
                    contactList.create({
                        name: $('#new-contact-name').val(),
                        phone: $('#new-contact-phone').val()
                    }, {
                        success: function (model, response) {
                            if (!isNaN(parseInt(response))) {
                                model.set({ id: response });
                            }
                        }
                    });
                });

                contactList.on('add', this.addOne, this);
                contactList.on('reset', this.addAll, this);
                contactList.fetch(); // Loads list from local storage
            },
            addOne: function (contact) {
                var view = new ContactItemView({ model: contact });
                $('#contact-list').append(view.render().el);
            },
            addAll: function () {
                this.$('#contact-list').html(''); // clean the todo list
                contactList.each(this.addOne, this);
            },
            render: function () {
                $("#contact-list").html("");
                if (this.model.length) {
                    for (var i = 0; i < this.model.length; i++) {
                        var view = new ContactItemView({ model: this.model.at(i) });
                        $("#contact-list").append(view.render().el);
                    }
                }
            }
        });

        var appView = new AppView();

    });

</script>

<script type="text/template" id="item-template">
    <div class="view">
        <label><%- id %> | </label>
        <label><%- name %> | </label>
        <input class="edit edit-name" value="<%- name %>">
        <label><%- phone %></label>
        <input class="edit edit-phone" value="<%- phone %>">   
        <button class="edit-button">edit</button>
        <button class="save">save</button>
        <button class="cancel-save">cancel</button>
        <button class="destroy">remove</button>
    </div>
</script>
</body>
</html>
